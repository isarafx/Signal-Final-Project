import tkinter
import tkinter.ttk
from matplotlib.backends.backend_tkagg import (
    FigureCanvasTkAgg, NavigationToolbar2Tk)
from matplotlib.backend_bases import key_press_handler
from matplotlib.figure import Figure
from matplotlib import style
import numpy as np
from ds1054z import DS1054Z

style.use("ggplot")
=======
class Profile:
    def __init__(self, show_ch=[1,0,0,0], ch1=[0,1,0,0], ch2=[0,1,0,0], ch3=[0,1,0,0], ch4=[0,1,0,0], time_div=0, res=1, current_ch=0, ip='192.168.1.1', dev=0):
        self.show_ch = show_ch          #[1,1,1,1] channel 1-4
        self.ch1 = ch1                  #[voltdiv, probeoff, x_off, y_off]
        self.ch2 = ch2
        self.ch3 = ch3
        self.ch4 = ch4
        self.time_div = time_div
        self.res = res
        self.current_ch = current_ch    #current ch setting
        self.ip = ip                    #ip
        self.dev = dev


class Application:
    def __init__(self, root):
        self.root =root
        self.root.title = 'GUI'

        self.dev = 0
        self.volt_div_range = [10,5,2,1,0.5,0.2,0.1,0.05,0.02,0.01,0.005,0.002,0.001]
        self.time_div_range = [50, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.02, 0.01, 0.005, 0.002, 0.001, 500E-6, 200E-6,
                          100E-6, 50E-6, 20E-6, 10E-6, 5E-6, 2E-6, 1E-6, 500E-9, 200E-9, 100E-9, 50E-9, 20E-9, 10E-9,
                          5E-9]
        self.volt_div_text = ['10V', '5V', '2V', '1V', '500mV', '200mV', '100mV', '50mV', '20mV', '10mV', '5mV', '2mV', '1mV']
        self.time_div_text = ['50s', '20s', '10s', '5s', '2s', '1s', '500ms', '200ms', '100ms', '50ms', '20ms', '10ms',
                         '5ms', '2ms', '1ms', '500μs', '200μs', '100μs', '50μs', '20μs', '10μs', '5μs', '2μs', '1μs',
                         '500ns', '200ns', '100ns', '50ns', '20ns', '10ns', '5ns']
        self.user_interface()

    #ui section seperate to make this code look cleaner
    def user_interface(self):
        """
        using only pack layout all of item are declared first then pack
        to make sure everything is configurable
        to understand how frame layed out check in github
        """
        self.ip_frame = tkinter.LabelFrame(self.root, text='enter your ip')
        self.ip_frame.pack(side=tkinter.TOP, fill=tkinter.X)
        useless_var=tkinter.StringVar()
        self.ip_box = tkinter.Entry(self.ip_frame, textvariable=useless_var)
        self.ip_box.pack(side=tkinter.LEFT)
        useless_var.set('169.254.1.5')
        self.ip_button = tkinter.Button(self.ip_frame, text='enter', command=self.login)
        self.ip_button.pack(side=tkinter.LEFT)
        self.status = tkinter.Label(self.ip_frame, text='please enter ip address first')
        self.status.pack(side=tkinter.LEFT)

        self.second_frame = tkinter.Frame(self.root)
        self.second_frame.pack(side=tkinter.TOP, fill=tkinter.BOTH)
        self.left_frame = tkinter.Frame(self.second_frame)
        self.left_frame.pack(side=tkinter.LEFT)
        self.right_frame = tkinter.Frame(self.second_frame)
        self.right_frame.pack(side=tkinter.RIGHT, fill=tkinter.BOTH, expand=1)
        self.div_frame = tkinter.LabelFrame(self.right_frame, text='Volt-div,  Time-div')
        self.div_frame.pack(side=tkinter.TOP)
        self.voltdiv = tkinter.ttk.Combobox(self.div_frame, state="readonly", values=self.volt_div_text)
        self.voltdiv.pack(side=tkinter.LEFT)
        self.voltdiv.current(1)
        self.voltdiv.bind("<<ComboboxSelected>>", self._setvoltdiv)
        self.timediv = tkinter.ttk.Combobox(self.div_frame, state="readonly", values=self.time_div_text)
        self.timediv.pack(side=tkinter.LEFT)
        self.timediv.current(1)
        self.timediv.bind("<<ComboboxSelected>>", self._settimediv)
        self.x_offframe = tkinter.LabelFrame(self.right_frame, text="X-Offset")
        self.x_offframe.pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)
        self.x_offset = tkinter.Scale(self.x_offframe, orient=tkinter.HORIZONTAL, from_=-100, to=100)
        self.x_offset.pack(side=tkinter.TOP, fill=tkinter.BOTH)
        self.x_offset.bind("<ButtonRelease-1>", self._offset_x_change)
        self.y_offframe = tkinter.LabelFrame(self.right_frame, text="Y-Offset")
        self.y_offframe.pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)
        self.y_offset = tkinter.Scale(self.y_offframe, orient=tkinter.HORIZONTAL, from_=-100, to=100)
        self.y_offset.pack(side=tkinter.TOP, fill=tkinter.BOTH)
        self.y_offset.bind("<ButtonRelease-1>", self._offset_y_change)
        self.sampling_res_frame = tkinter.LabelFrame(self.right_frame, text="Sampling_Resolution")
        self.sampling_res_frame.pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)
        self.sampling_offset = tkinter.Scale(self.sampling_res_frame, orient=tkinter.HORIZONTAL, from_=1, to=15)
        self.sampling_offset.pack(side=tkinter.TOP, fill=tkinter.BOTH)
        self.sampling_offset.bind("<ButtonRelease-1>", self._sampling_change)

        self.run_button_frame = tkinter.Frame(self.right_frame)
        self.run_button_frame.pack(side=tkinter.LEFT, fill=tkinter.BOTH, expand=1)
        self.run_button = tkinter.Button(self.run_button_frame, text='RUN', command=self._update_graph)
        self.run_button.pack(side=tkinter.LEFT, expand=1, fill=tkinter.X)
        self.stop_button = tkinter.Button(self.run_button_frame, text='STOP', command=self._setvoltdiv)
        self.stop_button.pack(side=tkinter.LEFT, expand=1, fill=tkinter.X)
        self.auto_button = tkinter.Button(self.run_button_frame, text='AUTO', command=self._savepic)
        self.auto_button.pack(side=tkinter.LEFT, expand=1, fill=tkinter.X)
        self.report = tkinter.Label(self.root, text='some nonsense detail for nerd')
        self.report.pack(side=tkinter.TOP)

        #
        t = np.arange(0, 12, .01)
        signal = [-0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.06, -0.06, 0.136, 0.132, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.064, 0.056, -0.136, -0.128, -0.148, -0.14, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.148, -0.064, -0.06, 0.136, 0.132, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.064, 0.06, -0.136, -0.132, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.148, -0.14, -0.148, -0.148, -0.064, -0.06, 0.14, 0.136, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002]
        self.fig = Figure(figsize=(8, 4.5), dpi=100)
        self.ax = self.fig.add_subplot(111)
        self.line1, = self.ax.plot(t, signal, 'r-')
        self.canvas = FigureCanvasTkAgg(self.fig, master=self.left_frame)  # A tk.DrawingArea.
        self.canvas.draw()
        self.canvas.get_tk_widget().pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)

        self.channel_frame = tkinter.Frame(self.left_frame)
        self.channel_frame.pack(side=tkinter.LEFT, fill=tkinter.BOTH, expand=1)

        self.chv1 = tkinter.IntVar()
        self.chv2 = tkinter.IntVar()
        self.chv3 = tkinter.IntVar()
        self.chv4 = tkinter.IntVar()
        self.ch1 = tkinter.Checkbutton(self.channel_frame, text='ch1', variable=self.chv1)
        self.ch2 = tkinter.Checkbutton(self.channel_frame, text='ch2', variable=self.chv2)
        self.ch3 = tkinter.Checkbutton(self.channel_frame, text='ch3', variable=self.chv3)
        self.ch4 = tkinter.Checkbutton(self.channel_frame, text='ch4', variable=self.chv4)
        self.ch1.pack(side=tkinter.LEFT, expand=1)
        self.ch2.pack(side=tkinter.LEFT, expand=1)
        self.ch3.pack(side=tkinter.LEFT, expand=1)
        self.ch4.pack(side=tkinter.LEFT, expand=1)

        self.ui_item = [self.voltdiv, self.timediv, self.x_offset, self.y_offset, self.sampling_offset,
                         self.ch1, self.ch2, self.ch3, self.ch4,
                        self.run_button, self.stop_button, self.auto_button]

        self.off_ui()


    #for connect to oscilloscope
    def login(self):
        try:
            if self.ip_box.get() == 'dev':
                self.status['text'] = "Dev mode"
                self.dev = 1
            else:
                ip = self.ip_box.get()
                self.scope = DS1054Z(ip)
                self.report['text'] = self.scope.idn
                self.status['text'] = "Login Successful"
                self.check_connection()
            self.on_ui()


        except Exception as e:
            self.report['text'] = e
            self.status['text'] = "Login Failed"

    #this method is run periodic every 100ms to update graph and check connection
    def check_connection(self):
        try:
            self.scope.idn
        except Exception as e:
            self.report['text'] = e
            self.status['text'] = "Login Failed"
        self.root.after(1000, self.check_connection)

    def _savepic(self):
        self.fig.savefig('potato.png')
    def _setvoltdiv(self, event=0):
        self.scope.set_channel_scale('CHAN1', self.volt_div_range[self.voltdiv.current()])
    def _settimediv(self, event=0):
        self.scope.timebase_scale = self.time_div_range[self.timediv.current()]
    def _update_graph(self):
        if self.dev:
            t = np.arange(0, 12, .01)
            signal = [1.76, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.56, 2.48, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.76, 1.44, 1.6, 1.36, 1.44, 1.2, 1.36, 1.04, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.48, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.0, -0.24, -0.08, -0.4, -0.24, -0.56, -0.4, -0.64, -0.64, -0.8, -0.8, -1.04, -0.88, -1.2, -1.04, -1.28, -1.2, -1.44, -1.36, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.0, -2.24, -2.08, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.48, -2.32, -2.32, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.32, -2.48, -2.32, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.0, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.2, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.88, -0.64, -0.72, -0.48, -0.56, -0.32, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.56, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.12, 1.44, 1.28, 1.52, 1.44, 1.76, 1.52, 1.84, 1.68, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.24, 2.4, 2.32, 2.48, 2.32, 2.56, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.76, 1.52, 1.44, 1.6, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.08, -0.24, -0.08, -0.4, -0.32, -0.56, -0.4, -0.64, -0.56, -0.8, -0.8, -1.04, -0.88, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -2.0, -2.16, -2.0, -2.24, -2.16, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.4, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.96, -0.64, -0.72, -0.48, -0.56, -0.32, -0.4, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.64, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.28, 1.52, 1.44, 1.68, 1.6, 1.84, 1.76, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.76, 1.44, 1.6, 1.36, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.48, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.0, -0.24, -0.16, -0.4, -0.24, -0.56, -0.4, -0.64, -0.56, -0.8, -0.8, -1.04, -0.96, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.76, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -2.0, -2.16, -2.08, -2.24, -2.08, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.48, -2.32, -2.32, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.04, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.32, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.64, 0.88, 0.8, 1.04, 0.88, 1.12, 1.04, 1.28, 1.12, 1.44, 1.28, 1.52, 1.44, 1.68, 1.6, 1.84, 1.68, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.48, 2.56, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.32, 2.08, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.84, 1.68, 1.76, 1.44, 1.6, 1.44, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.0, -0.24, -0.08, -0.4, -0.24, -0.56, -0.4, -0.64, -0.64, -0.8, -0.8, -1.04, -0.88, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.08, -2.24, -2.16, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.48, -2.32, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.76, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.04, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.4, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.32, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.56, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.28, 1.52, 1.44, 1.76, 1.6, 1.84, 1.68, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.56, 2.4, 2.48, 2.4, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.08, 2.24, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.68, 1.44, 1.6, 1.36, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.08, -0.24, -0.08, -0.4, -0.24, -0.56, -0.48, -0.64, -0.56, -0.88, -0.8, -1.04, -0.96, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.08, -2.24, -2.08, -2.32, -2.16, -2.4, -2.24, -2.4, -2.32, -2.48, -2.48, -2.32, -2.32, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.2, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.32, -0.4, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.64, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.36, 1.52, 1.44, 1.68, 1.6, 1.84, 1.68, 1.92, 1.84, 2.0, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.56, 2.4, 2.4, 2.48, 2.4, 2.56, 2.48, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.68, 1.52, 1.6, 1.36, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.08, -0.24, -0.16, -0.4, -0.24, -0.56, -0.4, -0.64, -0.56, -0.88, -0.8, -1.04, -0.96, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.0, -2.24, -2.16, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.32, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.56, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.28, 1.52, 1.44, 1.76, 1.6, 1.76]
            self.ax.cla()
            self.line1, = self.ax.plot(t, signal, 'r-')
            self.line1.set_ydata(signal)
            self.canvas.draw()
            self.canvas.flush_events()
        else:
            t = np.arange(0, 12, .01)
            signal = self.scope.get_waveform_samples('CHAN1')
            self.ax.cla()
            self.line1, = self.ax.plot(t, signal, 'r-')
            self.line1.set_ydata(signal)
            self.canvas.draw()
            self.canvas.flush_events()
    def _get_wave(self):
        # if self.dev:
        #     return [1.76, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.56, 2.48, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.76, 1.44, 1.6, 1.36, 1.44, 1.2, 1.36, 1.04, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.48, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.0, -0.24, -0.08, -0.4, -0.24, -0.56, -0.4, -0.64, -0.64, -0.8, -0.8, -1.04, -0.88, -1.2, -1.04, -1.28, -1.2, -1.44, -1.36, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.0, -2.24, -2.08, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.48, -2.32, -2.32, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.32, -2.48, -2.32, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.0, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.2, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.88, -0.64, -0.72, -0.48, -0.56, -0.32, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.56, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.12, 1.44, 1.28, 1.52, 1.44, 1.76, 1.52, 1.84, 1.68, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.24, 2.4, 2.32, 2.48, 2.32, 2.56, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.76, 1.52, 1.44, 1.6, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.08, -0.24, -0.08, -0.4, -0.32, -0.56, -0.4, -0.64, -0.56, -0.8, -0.8, -1.04, -0.88, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -2.0, -2.16, -2.0, -2.24, -2.16, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.4, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.96, -0.64, -0.72, -0.48, -0.56, -0.32, -0.4, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.64, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.28, 1.52, 1.44, 1.68, 1.6, 1.84, 1.76, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.76, 1.44, 1.6, 1.36, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.48, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.0, -0.24, -0.16, -0.4, -0.24, -0.56, -0.4, -0.64, -0.56, -0.8, -0.8, -1.04, -0.96, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.76, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -2.0, -2.16, -2.08, -2.24, -2.08, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.48, -2.32, -2.32, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.04, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.32, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.64, 0.88, 0.8, 1.04, 0.88, 1.12, 1.04, 1.28, 1.12, 1.44, 1.28, 1.52, 1.44, 1.68, 1.6, 1.84, 1.68, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.48, 2.56, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.32, 2.08, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.84, 1.68, 1.76, 1.44, 1.6, 1.44, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.0, -0.24, -0.08, -0.4, -0.24, -0.56, -0.4, -0.64, -0.64, -0.8, -0.8, -1.04, -0.88, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.08, -2.24, -2.16, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.48, -2.32, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.76, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.04, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.4, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.32, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.56, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.28, 1.52, 1.44, 1.76, 1.6, 1.84, 1.68, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.56, 2.4, 2.48, 2.4, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.08, 2.24, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.68, 1.44, 1.6, 1.36, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.08, -0.24, -0.08, -0.4, -0.24, -0.56, -0.48, -0.64, -0.56, -0.88, -0.8, -1.04, -0.96, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.08, -2.24, -2.08, -2.32, -2.16, -2.4, -2.24, -2.4, -2.32, -2.48, -2.48, -2.32, -2.32, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.2, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.32, -0.4, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.64, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.36, 1.52, 1.44, 1.68, 1.6, 1.84, 1.68, 1.92, 1.84, 2.0, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.56, 2.4, 2.4, 2.48, 2.4, 2.56, 2.48, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.68, 1.52, 1.6, 1.36, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.08, -0.24, -0.16, -0.4, -0.24, -0.56, -0.4, -0.64, -0.56, -0.88, -0.8, -1.04, -0.96, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.0, -2.24, -2.16, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.32, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.56, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.28, 1.52, 1.44, 1.76, 1.6, 1.76]
        # else:
        #     return signal = self.scope.get_waveform_samples('CHAN1')
        pass

    """
    slider using -100 - 100 percentage 
    offset is calculate from slider value(percentage) * block number * time/volt div
    block number is the number you want trigger to be able to shift
    for example look at scope monitor you will find that scope have 12*8 block
    """
    def _offset_x_change(self, event=0):
        block_number = 6
        offset = 0.01*self.x_offset.get() * block_number * self.time_div_range[self.timediv.current()]
        self.scope.timebase_offset = 0
        self.scope.timebase_offset = offset
        self._update_graph()
        print(block_number,'-', self.x_offset.get(),'-', self.time_div_range[self.timediv.current()], '-',offset)
    def _offset_y_change(self, event=0):
        block_number = 6
        offset = 0.01*self.y_offset.get() * block_number * self.volt_div_range[self.voltdiv.current()]
        self.scope.set_channel_offset('CHAN1', 0)
        self.scope.set_channel_offset('CHAN1', offset)
        self._update_graph()
        print(block_number,'-', self.y_offset.get(),'-', self.volt_div_range[self.voltdiv.current()], '-',offset)
    def _sampling_change(self, event=0):
        sampling = self.sampling_offset.get()
        # signal =

    """
    on_ui and off_ui is method for disable or enable the user interface
    incase the PC lose connection to oscilloscope it will halt the operation
    and wont let user choose unless the connection is comeback
    """
    def on_ui(self):
        for item in self.ui_item:
            item['state'] = "normal"
            #combobox readonly specialcase
            self.voltdiv['state'] = "readonly"
            self.timediv['state'] = "readonly"
            self.probe_offset['state'] = "readonly"
    def off_ui(self):
        for item in self.ui_item:
            item['state'] = "disabled"

root = tkinter.Tk()
gui = Application(root)
root.mainloop()
