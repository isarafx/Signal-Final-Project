from ds1054z import DS1054Z

# scope = DS1054Z('169.254.1.5')
# print("Connected to: ", scope.idn)
#
# print("Currently displayed channels: ", str(scope.displayed_channels))
# volt_div_range = [10,5,2,1,0.5,0.2,0.1,0.05,0.02,0.01,0.005,0.002,0.001]
# time_div_range = [50,20,10,5,2,1,0.5,0.2,0.1,0.05,0.02,0.01,0.005,0.002,0.001,500E-6,200E-6,100E-6,50E-6,20E-6,10E-6,5E-6,2E-6,1E-6,500E-9,200E-9,100E-9,50E-9,20E-9,10E-9,5E-9]
# scope.set_channel_scale('CHAN1', 10)
# scope.set_channel_offset('CHAN1', '-1V')
# scope.timebase_offset = 0.0013
# scope.set_channel_offset('CHAN1', '5V')

#
# # write command
# print(scope.get_channel_measurement('CHAN1', 'vmax'))
# #0.152
#
# print(scope.get_channel_offset('CHAN1'))
# #0.0
#
# print(scope.get_channel_scale('CHAN1'))
# #0.1
#
# print(scope.get_waveform_bytes('CHAN1'))
# #b'Z\\\\ZZpq\xa1\xa0\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa5\x8f\x8e]_Z\\ZZ\\\\Z\\[[\\\\[[\\[\\\\[\\[[\\[\\\\[[\\[\\\\[[\\[\\[\\\\[\\Z\\Z\\Z\\[\\[\\[[\\[\\[\\\\[\\Z\\[\\[\\[[\\\\[\\[[\\\\[[\\[\\\\[[\\\\[\\[\\[\\[[\\\\[\\[\\[\\[[\\[\\\\[\\[\\[[\\\\[\\[[\\\\[[\\\\[\\[\\[\\[[\\[\\[\\[\\[\\\\[[\\\\[\\Z[\\\\[\\Z[\\\\Z\\[\\[[\\\\[[\\\\Z\\[\\[[\\\\Z\\Z\\Z\\Z\\Z\\Z[\\\\Z\\Z\\Z\\ZZ\\\\Z\\Z[\\\\Z\\Z\\Z\\Z\\Z\\ZZ\\Z\\\\Z\\Z\\Z\\Z\\Z\\Z\\Z\\Z\\ZZpq\xa1\xa0\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa5\x8f\x8e\\_Z\\Z\\Z\\Z\\[\\[[\\\\[\\[\\[[\\\\[\\[\\[[\\[\\[\\\\[\\[\\Z\\Z[\\\\[\\Z\\[[\\[\\\\[\\Z[\\\\[\\[\\[\\[[\\[\\[\\\\[[\\[\\[\\[\\\\[\\[\\[\\[[\\\\[\\[[\\[\\\\[\\[[\\\\[\\[\\[[\\[\\\\[[\\[\\\\[\\[[\\\\[\\[[\\\\[\\[[\\\\[[\\\\[[\\\\[[\\[\\\\[\\Z\\Z\\ZZ\\[\\[\\[\\[\\\\[[\\\\Z\\ZZ\\[\\\\Z\\[\\Z\\Z\\[\\Z[\\\\Z\\Z\\Z\\ZZ\\\\Z\\Z[\\\\Z\\[\\ZZ\\\\Z\\Z\\Z\\Z\\Z\\Z[\\\\Z\\Z\\Z\\ZZpp\xa1\xa0\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa3\xa5\xa3\xa5\xa5\xa3\xa5\xa3\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5\xa3\xa5\xa5\xa3\xa3\xa5'
# set time offset
#scope.timebase_offset
# scope.timebase_offset = 0.001
# for i in range(1000):
# print(scope.waveform_time_values)
# print(scope.get_waveform_samples('CHAN1'))
# #[-0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.06, -0.06, 0.136, 0.132, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.064, 0.056, -0.136, -0.128, -0.148, -0.14, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.148, -0.064, -0.06, 0.136, 0.132, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.064, 0.06, -0.136, -0.132, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.148, -0.14, -0.148, -0.148, -0.064, -0.06, 0.14, 0.136, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002]
# scope.set_channel_scale('CHAN1', '5V')
# scope.set_channel_offset('CHAN1', '5V')
# scope.timebase_scale = 200E-9
# scope.display_channel('CHAN2', enable=True)
# scope.display_channel('CHAN1', enable=True)
# final = [1.76, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.56, 2.48, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.76, 1.44, 1.6, 1.36, 1.44, 1.2, 1.36, 1.04, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.48, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.0, -0.24, -0.08, -0.4, -0.24, -0.56, -0.4, -0.64, -0.64, -0.8, -0.8, -1.04, -0.88, -1.2, -1.04, -1.28, -1.2, -1.44, -1.36, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.0, -2.24, -2.08, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.48, -2.32, -2.32, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.32, -2.48, -2.32, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.0, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.2, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.88, -0.64, -0.72, -0.48, -0.56, -0.32, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.56, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.12, 1.44, 1.28, 1.52, 1.44, 1.76, 1.52, 1.84, 1.68, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.24, 2.4, 2.32, 2.48, 2.32, 2.56, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.76, 1.52, 1.44, 1.6, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.08, -0.24, -0.08, -0.4, -0.32, -0.56, -0.4, -0.64, -0.56, -0.8, -0.8, -1.04, -0.88, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -2.0, -2.16, -2.0, -2.24, -2.16, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.4, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.96, -0.64, -0.72, -0.48, -0.56, -0.32, -0.4, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.64, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.28, 1.52, 1.44, 1.68, 1.6, 1.84, 1.76, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.76, 1.44, 1.6, 1.36, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.48, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.0, -0.24, -0.16, -0.4, -0.24, -0.56, -0.4, -0.64, -0.56, -0.8, -0.8, -1.04, -0.96, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.76, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -2.0, -2.16, -2.08, -2.24, -2.08, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.48, -2.32, -2.32, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.04, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.32, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.64, 0.88, 0.8, 1.04, 0.88, 1.12, 1.04, 1.28, 1.12, 1.44, 1.28, 1.52, 1.44, 1.68, 1.6, 1.84, 1.68, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.48, 2.56, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.32, 2.08, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.84, 1.68, 1.76, 1.44, 1.6, 1.44, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.0, -0.24, -0.08, -0.4, -0.24, -0.56, -0.4, -0.64, -0.64, -0.8, -0.8, -1.04, -0.88, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.08, -2.24, -2.16, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.48, -2.32, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.76, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.04, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.4, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.32, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.56, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.28, 1.52, 1.44, 1.76, 1.6, 1.84, 1.68, 1.92, 1.84, 2.08, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.56, 2.4, 2.48, 2.4, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.08, 2.24, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.68, 1.44, 1.6, 1.36, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.08, -0.24, -0.08, -0.4, -0.24, -0.56, -0.48, -0.64, -0.56, -0.88, -0.8, -1.04, -0.96, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.08, -2.24, -2.08, -2.32, -2.16, -2.4, -2.24, -2.4, -2.32, -2.48, -2.48, -2.32, -2.32, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.2, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.32, -0.4, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.64, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.36, 1.52, 1.44, 1.68, 1.6, 1.84, 1.68, 1.92, 1.84, 2.0, 1.92, 2.16, 2.0, 2.24, 2.08, 2.32, 2.16, 2.4, 2.4, 2.24, 2.32, 2.48, 2.32, 2.56, 2.56, 2.4, 2.4, 2.48, 2.4, 2.56, 2.48, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.56, 2.32, 2.32, 2.48, 2.48, 2.24, 2.4, 2.16, 2.16, 2.32, 2.24, 2.08, 2.16, 1.92, 2.08, 1.84, 2.0, 1.76, 1.92, 1.68, 1.68, 1.52, 1.6, 1.36, 1.44, 1.2, 1.36, 1.12, 1.2, 0.96, 1.04, 0.8, 0.96, 0.64, 0.8, 0.56, 0.64, 0.4, 0.48, 0.24, 0.32, 0.08, 0.16, -0.08, 0.08, -0.24, -0.16, -0.4, -0.24, -0.56, -0.4, -0.64, -0.56, -0.88, -0.8, -1.04, -0.96, -1.2, -1.04, -1.28, -1.2, -1.44, -1.28, -1.6, -1.44, -1.68, -1.52, -1.84, -1.68, -1.92, -1.76, -2.0, -1.84, -2.08, -1.92, -2.16, -2.0, -2.24, -2.16, -2.32, -2.16, -2.4, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.48, -2.32, -2.32, -2.48, -2.48, -2.24, -2.24, -2.4, -2.32, -2.16, -2.32, -2.08, -2.24, -2.0, -2.16, -1.92, -2.08, -1.84, -1.92, -1.68, -1.84, -1.6, -1.76, -1.52, -1.6, -1.36, -1.52, -1.28, -1.36, -1.12, -1.2, -0.96, -1.12, -0.8, -0.96, -0.72, -0.72, -0.48, -0.56, -0.32, -0.48, -0.16, -0.32, 0.0, -0.16, 0.16, 0.0, 0.24, 0.16, 0.4, 0.32, 0.56, 0.48, 0.72, 0.56, 0.88, 0.72, 1.04, 0.88, 1.12, 1.04, 1.28, 1.2, 1.44, 1.28, 1.52, 1.44, 1.76, 1.6, 1.76]
#
#
# print(scope.ge)

# scope.display_only_channel('CHAN2')

# class Profile:
#     def __init__(self, show_ch=[1,0,0,0], ch1=[0,1,0,0], ch2=[0,1,0,0], ch3=[0,1,0,0], ch4=[0,1,0,0], time_div=0, res=1, current_ch=0, ip='192.168.1.1', dev=0):
#         self.show_ch = show_ch          #[1,1,1,1] channel 1-4
#         self.ch1 = ch1                  #[voltdiv, probeoff, x_off, y_off]
#         self.ch2 = ch2
#         self.ch3 = ch3
#         self.ch4 = ch4
#         self.time_div = time_div
#         self.res = res
#         self.current_ch = current_ch    #current ch setting
#         self.ip = ip                    #ip
#         self.dev = dev
# import pickle
# ch1 = Profile()
# ch2 = Profile()
# ch3 = Profile()
# ch4 = Profile()
# temp = Profile()
#
#
# import pickle
#
# file = open('test.pkl','wb')
# obj_1 = ch1
# obj_2 = ch2
# obj_3 = ch3
# obj_4 = ch4
# obj_temp = temp
#
# pickle.dump(obj_1, file)
# pickle.dump(obj_2, file)
# pickle.dump(obj_3, file)
# pickle.dump(obj_4, file)
# pickle.dump(obj_temp, file)
#
# file.close()
#
# file = open('test.pkl', 'rb')
# b1 = pickle.load(file)
# b2 = pickle.load(file)
# b3 = pickle.load(file)
# b4 = pickle.load(file)
# temp = pickle.load(file)
# print(b1.show_ch)
# print(b2)
# print(b3)
# file.close()
listy = [1,2,3,4,5]
[profile=5 for profile in listy]
