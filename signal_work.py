#!/usr/bin/env python
# -*- coding: utf-8 -*-
# author:Isara, Phichet, Saksit
# github: https://github.com/isarafx/Signal-Final-Project
# preview video: youtube.com/watch?v=yRimSoQqzYQ
# 11-11-2020

import tkinter
import tkinter.ttk
import tkinter.filedialog
import tkinter.simpledialog
from matplotlib.backends.backend_tkagg import (
    FigureCanvasTkAgg, NavigationToolbar2Tk)
from matplotlib.backend_bases import key_press_handler
from matplotlib.figure import Figure
from matplotlib import style
from PIL import Image, ImageOps, ImageEnhance
style.use("ggplot")
import numpy as np
from ds1054z import DS1054Z
from matplotlib.backends.backend_tkagg import (
    FigureCanvasTkAgg, NavigationToolbar2Tk)
# Implement the default Matplotlib key bindings.
from matplotlib.backend_bases import key_press_handler
from matplotlib.figure import Figure

class Application(tkinter.Tk):
    def __init__(self):
        super(Application, self).__init__()

        self.ch1_info = [0, 0, 0]
        self.ch2_info = [0, 0, 0]
        self.ch3_info = [0, 0, 0]
        self.ch4_info = [0, 0, 0]
        self.block_number = 6
        self.ch_range = ['CHAN1', 'CHAN2', 'CHAN3', 'CHAN4']
        self.volt_div_range = [100, 50, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.02, 0.01, 0.005, 0.002, 0.001]
        self.time_div_range = [50, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.02, 0.01, 0.005, 0.002, 0.001, 500E-6,
                               200E-6,
                               100E-6, 50E-6, 20E-6, 10E-6, 5E-6, 2E-6, 1E-6, 500E-9, 200E-9, 100E-9, 50E-9, 20E-9,
                               10E-9,
                               5E-9]
        self.volt_div_text = ['100V', '50V', '20V', '10V', '5V', '2V', '1V', '500mV', '200mV', '100mV', '50mV', '20mV', '10mV', '5mV', '2mV',
                              '1mV']
        self.time_div_text = ['50s', '20s', '10s', '5s', '2s', '1s', '500ms', '200ms', '100ms', '50ms', '20ms', '10ms',
                              '5ms', '2ms', '1ms', '500μs', '200μs', '100μs', '50μs', '20μs', '10μs', '5μs', '2μs',
                              '1μs',
                              '500ns', '200ns', '100ns', '50ns', '20ns', '10ns', '5ns']

        self.user_interface()

    def user_interface(self):
        """
        using only pack layout all of item are declared first then pack
        to make sure everything is configurable
        to understand how frame layed out check in github
        """
        self.ip_frame = tkinter.LabelFrame(self, text='enter your ip')
        self.ip_frame.pack(side=tkinter.TOP, fill=tkinter.X)
        useless_var=tkinter.StringVar()
        self.ip_box = tkinter.Entry(self.ip_frame, textvariable=useless_var)
        self.ip_box.pack(side=tkinter.LEFT)
        useless_var.set('169.254.1.5')
        self.ip_button = tkinter.Button(self.ip_frame, text='enter', command=self._connect)
        self.ip_button.pack(side=tkinter.LEFT)
        self.status = tkinter.Label(self.ip_frame, text='please enter ip address first')
        self.status.pack(side=tkinter.LEFT)

        self.second_frame = tkinter.Frame(self)
        self.second_frame.pack(side=tkinter.TOP, fill=tkinter.BOTH)
        self.left_frame = tkinter.Frame(self.second_frame)
        self.left_frame.pack(side=tkinter.LEFT)
        self.right_frame = tkinter.Frame(self.second_frame)
        self.right_frame.pack(side=tkinter.RIGHT, fill=tkinter.BOTH, expand=1)
        self.chdiv_frame = tkinter.Label(self.right_frame)
        self.chdiv_frame.pack(side=tkinter.TOP)
        self.timediv = tkinter.ttk.Combobox(self.chdiv_frame, state="readonly", values=self.time_div_text)
        self.timediv.pack(side=tkinter.LEFT, fill=tkinter.X, expand=1)
        self.timediv.current(1)
        self.timediv.bind("<<ComboboxSelected>>", self._settimediv)
        self.chdiv2_frame = tkinter.Frame(self.right_frame)
        self.chdiv2_frame.pack(side=tkinter.TOP)
        self.select_ch = tkinter.ttk.Combobox(self.chdiv2_frame, state="readonly", values=self.ch_range)
        self.select_ch.pack(side=tkinter.LEFT)
        self.select_ch.current(1)
        self.select_ch.bind("<<ComboboxSelected>>", self._select_channel)

        self.voltdiv = tkinter.ttk.Combobox(self.chdiv2_frame, state="readonly", values=self.volt_div_text)
        self.voltdiv.pack(side=tkinter.LEFT)
        self.voltdiv.current(1)
        self.voltdiv.bind("<<ComboboxSelected>>", self._setvoltdiv)
        self.x_offframe = tkinter.LabelFrame(self.right_frame, text="X-Offset")
        self.x_offframe.pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)
        self.x_offset = tkinter.Scale(self.x_offframe, orient=tkinter.HORIZONTAL, from_=-100, to=100)
        self.x_offset.pack(side=tkinter.TOP, fill=tkinter.BOTH)
        self.x_offset.bind("<ButtonRelease-1>", self._offset_x_change)
        self.y_offframe = tkinter.LabelFrame(self.right_frame, text="Y-Offset")
        self.y_offframe.pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)
        self.y_offset = tkinter.Scale(self.y_offframe, orient=tkinter.HORIZONTAL, from_=-100, to=100)
        self.y_offset.pack(side=tkinter.TOP, fill=tkinter.BOTH)
        self.y_offset.bind("<ButtonRelease-1>", self._offset_y_change)
        self.sampling_res_frame = tkinter.LabelFrame(self.right_frame, text="Sampling_Resolution")
        self.sampling_res_frame.pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)
        self.sampling_offset = tkinter.Scale(self.sampling_res_frame, orient=tkinter.HORIZONTAL, from_=1, to=15)
        self.sampling_offset.pack(side=tkinter.TOP, fill=tkinter.BOTH)
        self.sampling_offset.bind("<ButtonRelease-1>")

        self.run_button_frame = tkinter.Frame(self.right_frame)
        self.run_button_frame.pack(side=tkinter.LEFT, fill=tkinter.BOTH, expand=1)
        self.run_button = tkinter.Button(self.run_button_frame, text='RUN', bg='#72f745', fg='#000000', command=self.run)
        self.run_button.pack(side=tkinter.LEFT, expand=1, fill=tkinter.X)
        self.stop_button = tkinter.Button(self.run_button_frame, text='STOP', bg='#f65656', fg='#000000', command=self.stop)
        self.stop_button.pack(side=tkinter.LEFT, expand=1, fill=tkinter.X)
        self.report = tkinter.Label(self, text='some nonsense detail for nerd')
        self.report.pack(side=tkinter.TOP)

        self.t = np.arange(0, 12, .01)
        signal = [-0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.06, -0.06, 0.136, 0.132, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.064, 0.056, -0.136, -0.128, -0.148, -0.14, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.148, -0.064, -0.06, 0.136, 0.132, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.064, 0.06, -0.136, -0.132, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14400000000000002, -0.14, -0.14400000000000002, -0.14, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.14, -0.148, -0.148, -0.14, -0.14, -0.148, -0.14, -0.148, -0.148, -0.064, -0.06, 0.14, 0.136, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.14400000000000002, 0.152, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002, 0.152, 0.14400000000000002]
        signal2 = [0.64, 0.48, 0.56, 0.4, 0.56, 0.4, 0.48, 0.32, 0.32, 0.48, 0.4, 0.24, 0.4, 0.24, 0.32, 0.16, 0.24, 0.08, 0.08, 0.24, 0.16, 0.0, 0.0, 0.16, 0.08, -0.08, -0.08, 0.08, 0.0, -0.16, -0.08, -0.24, -0.24, -0.08, -0.16, -0.32, -0.32, -0.16, -0.24, -0.4, -0.4, -0.24, -0.32, -0.48, -0.48, -0.32, -0.4, -0.56, -0.48, -0.64, -0.64, -0.48, -0.56, -0.72, -0.72, -0.56, -0.64, -0.88, -0.72, -0.88, -0.8, -0.96, -0.8, -0.96, -0.88, -1.04, -0.88, -1.04, -0.96, -1.12, -0.96, -1.12, -1.04, -1.2, -1.04, -1.2, -1.12, -1.28, -1.28, -1.12, -1.2, -1.36, -1.36, -1.2, -1.28, -1.44, -1.28, -1.44, -1.36, -1.52, -1.52, -1.36, -1.44, -1.6, -1.6, -1.44, -1.52, -1.68, -1.68, -1.52, -1.52, -1.76, -1.6, -1.76, -1.76, -1.6, -1.68, -1.84, -1.84, -1.68, -1.76, -1.92, -1.92, -1.76, -1.92, -1.76, -1.84, -2.0, -2.0, -1.84, -1.84, -2.0, -1.92, -2.08, -2.08, -1.92, -2.08, -1.92, -2.0, -2.16, -2.16, -2.0, -2.16, -2.0, -2.08, -2.24, -2.24, -2.08, -2.24, -2.08, -2.24, -2.16, -2.16, -2.32, -2.16, -2.32, -2.32, -2.16, -2.16, -2.32, -2.24, -2.4, -2.4, -2.24, -2.4, -2.24, -2.4, -2.24, -2.4, -2.24, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.32, -2.48, -2.48, -2.32, -2.48, -2.4, -2.4, -2.56, -2.56, -2.4, -2.4, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.48, -2.4, -2.48, -2.4, -2.4, -2.48, -2.48, -2.32, -2.32, -2.48, -2.32, -2.48, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.4, -2.32, -2.4, -2.24, -2.4, -2.24, -2.4, -2.24, -2.4, -2.24, -2.32, -2.24, -2.32, -2.16, -2.32, -2.16, -2.32, -2.16, -2.32, -2.16, -2.24, -2.08, -2.24, -2.08, -2.24, -2.08, -2.08, -2.24, -2.16, -2.0, -2.16, -2.0, -2.16, -1.92, -2.08, -1.92, -2.08, -1.92, -2.08, -1.92, -2.0, -1.84, -2.0, -1.84, -2.0, -1.76, -1.92, -1.76, -1.92, -1.76, -1.84, -1.68, -1.84, -1.68, -1.84, -1.6, -1.76, -1.6, -1.76, -1.6, -1.68, -1.52, -1.68, -1.52, -1.6, -1.44, -1.6, -1.44, -1.52, -1.36, -1.52, -1.36, -1.52, -1.36, -1.44, -1.28, -1.44, -1.28, -1.36, -1.2, -1.2, -1.36, -1.28, -1.12, -1.12, -1.28, -1.04, -1.2, -1.2, -1.04, -1.12, -0.96, -0.96, -1.12, -0.88, -1.04, -0.96, -0.8, -0.8, -0.96, -0.88, -0.72, -0.88, -0.64, -0.72, -0.56, -0.72, -0.56, -0.64, -0.48, -0.64, -0.48, -0.56, -0.4, -0.56, -0.32, -0.48, -0.32, -0.48, -0.24, -0.4, -0.24, -0.32, -0.16, -0.32, -0.16, -0.24, -0.08, -0.24, -0.08, -0.16, 0.0, -0.16, 0.08, -0.08, 0.08, 0.0, 0.16, 0.16, 0.0, 0.08, 0.24, 0.24, 0.08, 0.16, 0.32, 0.16, 0.32, 0.24, 0.4, 0.24, 0.48, 0.32, 0.48, 0.4, 0.56, 0.4, 0.56, 0.48, 0.64, 0.64, 0.48, 0.56, 0.72, 0.56, 0.72, 0.64, 0.8, 0.64, 0.88, 0.72, 0.88, 0.8, 0.96, 0.96, 0.8, 0.88, 1.04, 1.04, 0.88, 0.96, 1.12, 1.12, 0.96, 1.04, 1.2, 1.2, 1.04, 1.12, 1.28, 1.28, 1.12, 1.2, 1.36, 1.36, 1.2, 1.28, 1.44, 1.44, 1.28, 1.36, 1.52, 1.52, 1.36, 1.52, 1.44, 1.44, 1.6, 1.6, 1.44, 1.6, 1.76, 1.76, 1.52, 1.68, 1.84, 1.68, 1.84, 1.76, 1.84, 1.76, 1.92, 1.76, 1.92, 1.84, 2.0, 2.0, 1.84, 1.84, 2.0, 1.92, 2.08, 1.92, 2.08, 1.92, 2.08, 2.0, 2.16, 2.0, 2.16, 2.0, 2.16, 2.08, 2.24, 2.08, 2.24, 2.08, 2.24, 2.16, 2.32, 2.32, 2.16, 2.16, 2.32, 2.32, 2.16, 2.24, 2.4, 2.4, 2.24, 2.4, 2.24, 2.4, 2.24, 2.4, 2.24, 2.32, 2.48, 2.48, 2.32, 2.48, 2.32, 2.32, 2.48, 2.32, 2.48, 2.48, 2.32, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.56, 2.4, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.48, 2.32, 2.48, 2.32, 2.32, 2.48, 2.32, 2.48, 2.48, 2.32, 2.48, 2.32, 2.4, 2.24, 2.4, 2.24, 2.4, 2.24, 2.4, 2.24, 2.24, 2.32, 2.32, 2.16, 2.16, 2.32, 2.32, 2.16, 2.24, 2.08, 2.08, 2.24, 2.24, 2.08, 2.08, 2.24, 2.16, 2.0, 2.0, 2.16, 2.0, 2.16, 2.08, 1.92, 1.92, 2.08, 1.92, 2.08, 2.0, 1.84, 1.84, 2.0, 1.92, 1.76, 1.76, 1.92, 1.76, 1.92, 1.84, 1.68, 1.68, 1.84, 1.76, 1.6, 1.6, 1.76, 1.68, 1.6, 1.6, 1.44, 1.6, 1.44, 1.52, 1.36, 1.52, 1.36, 1.44, 1.28, 1.28, 1.44, 1.36, 1.2, 1.36, 1.2, 1.2, 1.28, 1.28, 1.12, 1.28, 1.04, 1.2, 1.04, 1.12, 0.96, 1.12, 0.96, 0.96, 1.12, 1.04, 0.88, 0.96, 0.8, 0.8, 0.96, 0.88, 0.72, 0.72, 0.88, 0.8, 0.64, 0.64, 0.8, 0.72, 0.56, 0.56, 0.72, 0.64, 0.48, 0.64, 0.48, 0.56, 0.4, 0.48, 0.32, 0.48, 0.32, 0.4, 0.24, 0.24, 0.4, 0.32, 0.16, 0.32, 0.16, 0.24, 0.08, 0.08, 0.24, 0.16, 0.0, 0.08, -0.08, -0.08, 0.08, 0.0, -0.16, 0.0, -0.16, -0.08, -0.24, -0.08, -0.32, -0.16, -0.32, -0.24, -0.4, -0.24, -0.4, -0.32, -0.48, -0.48, -0.32, -0.4, -0.56, -0.4, -0.56, -0.48, -0.64, -0.56, -0.64, -0.72, -0.56, -0.64, -0.8, -0.88, -0.72, -0.8, -0.96, -0.8, -0.96, -0.88, -1.04, -1.04, -0.88, -0.96, -1.12, -0.96, -1.12, -1.04, -1.2, -1.2, -1.04, -1.12, -1.28, -1.12, -1.28, -1.2, -1.36, -1.2, -1.36, -1.28, -1.44, -1.44, -1.28, -1.36, -1.52, -1.36, -1.52, -1.44, -1.6, -1.6, -1.44, -1.6, -1.44, -1.52, -1.68, -1.68, -1.52, -1.6, -1.76, -1.76, -1.6, -1.68, -1.84, -1.84, -1.68, -1.68, -1.84, -1.76, -1.92, -1.92, -1.76, -1.84, -2.0, -1.84, -2.0, -2.0, -1.84, -1.92, -2.08, -2.08, -1.92, -2.08, -1.92, -2.0, -2.16, -2.0, -2.16, -2.16, -2.0, -2.0, -2.24, -2.08, -2.24, -2.24, -2.08, -2.24, -2.08, -2.16, -2.32, -2.32, -2.16, -2.32, -2.16, -2.32, -2.16, -2.32, -2.24, -2.24, -2.4, -2.4, -2.24, -2.4, -2.24, -2.4, -2.24, -2.4, -2.32, -2.32, -2.48, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.4, -2.56, -2.48, -2.4, -2.4, -2.56, -2.4, -2.56, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.56, -2.4, -2.4, -2.56, -2.4, -2.56, -2.48, -2.4, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.48, -2.32, -2.32, -2.4, -2.4, -2.24, -2.4, -2.24, -2.4, -2.24, -2.4, -2.24, -2.32, -2.16, -2.32, -2.16, -2.32, -2.16, -2.32, -2.16, -2.32, -2.16, -2.24, -2.08, -2.08, -2.24, -2.24, -2.08, -2.16, -2.0, -2.16, -2.0, -2.16, -2.0, -2.0, -2.16, -2.08, -1.92, -2.08, -1.92, -1.92, -2.08, -2.0, -1.84, -2.0, -1.84, -1.92, -1.76, -1.92, -1.76, -1.76, -1.92, -1.84, -1.68, -1.68, -1.84, -1.68, -1.84, -1.76, -1.6, -1.76, -1.6, -1.68, -1.52, -1.68, -1.52, -1.6, -1.44, -1.6, -1.44, -1.6, -1.44, -1.52, -1.36, -1.36, -1.52, -1.44, -1.28, -1.44, -1.28, -1.36, -1.2, -1.36, -1.2, -1.28, -1.12, -1.28, -1.12, -1.2, -1.04, -1.2, -1.04, -1.12, -0.96, -0.96, -1.12, -1.04, -0.88, -1.04, -0.8, -0.96, -0.8, -0.8, -0.88, -0.88, -0.64, -0.72, -0.56, -0.72, -0.56, -0.64, -0.48, -0.64, -0.48, -0.56, -0.4, -0.56, -0.4, -0.48, -0.32, -0.48, -0.32, -0.4, -0.24, -0.32, -0.16, -0.32, -0.16, -0.24, -0.08, -0.08, -0.24, -0.16, 0.0, -0.16, 0.0, -0.08, 0.08, -0.08, 0.08, 0.0, 0.16, 0.08, 0.24, 0.08, 0.24, 0.16, 0.32, 0.32, 0.16, 0.24, 0.4, 0.24, 0.4, 0.32, 0.48, 0.4, 0.56, 0.4, 0.56, 0.48, 0.64, 0.64, 0.48, 0.56, 0.72, 0.72, 0.56, 0.64, 0.8, 0.8, 0.64, 0.72, 0.88, 0.88, 0.72, 0.8, 0.96, 0.96, 0.8, 0.88, 1.04, 1.04, 0.96, 0.96, 1.12, 1.12, 1.04, 1.04, 1.2, 1.04, 1.28, 1.28, 1.12, 1.2, 1.36, 1.2, 1.36, 1.28, 1.44, 1.44, 1.28, 1.44, 1.28, 1.36, 1.52, 1.52, 1.36, 1.44, 1.6, 1.6, 1.44, 1.6, 1.76, 1.52, 1.76, 1.68, 1.84, 1.68, 1.84, 1.68, 1.84, 1.76, 1.92, 1.76, 1.92, 1.84, 1.92, 1.84, 2.0, 1.84, 2.0, 1.92, 2.08, 2.08, 1.92, 1.92, 2.08, 2.0, 2.16, 2.16, 2.0, 2.0, 2.16, 2.08, 2.24, 2.24, 2.08, 2.08, 2.24, 2.16, 2.32, 2.32, 2.16, 2.32, 2.16, 2.16, 2.32, 2.24, 2.4, 2.24, 2.4, 2.4, 2.24, 2.4, 2.24, 2.4, 2.24, 2.32, 2.48, 2.32, 2.48, 2.48, 2.32, 2.48, 2.32, 2.32, 2.48, 2.32, 2.48, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56, 2.56, 2.4, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.56, 2.4, 2.4, 2.56]
        signal3 = [-0.6784, -0.7208, -0.6784, -0.7632, -0.6784, -0.7632, -0.6784, -0.7632, -0.7208, -0.8056, -0.8056, -0.7208, -0.7632, -0.8056, -0.7632, -0.848, -0.7632, -0.848, -0.8056, -0.848, -0.8056, -0.8904, -0.8904, -0.8056, -0.8056, -0.9328, -0.848, -0.9328, -0.848, -0.9328, -0.8904, -0.9328, -0.8904, -0.9752, -0.8904, -0.9752, -0.9328, -1.0176, -0.9328, -1.0176, -1.0176, -0.9328, -0.9752, -1.06, -0.9752, -1.06, -0.9752, -1.06, -1.0176, -1.1024, -1.0176, -1.1024, -1.0176, -1.1024, -1.06, -1.1448, -1.06, -1.1448, -1.06, -1.1448, -1.1024, -1.1872, -1.1872, -1.1024, -1.1872, -1.1024, -1.1448, -1.2296, -1.2296, -1.1448, -1.2296, -1.1448, -1.1872, -1.272, -1.272, -1.1872, -1.272, -1.1872, -1.2296, -1.3144, -1.3144, -1.2296, -1.272, -1.3144, -1.272, -1.3568, -1.272, -1.3568, -1.3568, -1.3144, -1.3144, -1.3992, -1.3144, -1.3992, -1.3568, -1.4416, -1.3568, -1.4416, -1.4416, -1.3568, -1.3992, -1.484, -1.3992, -1.484, -1.484, -1.3992, -1.4416, -1.5264, -1.5264, -1.4416, -1.5264, -1.4416, -1.484, -1.5688, -1.5688, -1.484, -1.5688, -1.484, -1.5264, -1.6112, -1.6112, -1.5264, -1.6112, -1.5264, -1.5688, -1.6536, -1.6536, -1.5688, -1.5688, -1.6536, -1.6112, -1.696, -1.6112, -1.696, -1.696, -1.6536, -1.7384, -1.6536, -1.7384, -1.6536, -1.7384, -1.6536, -1.696, -1.7808, -1.7808, -1.696, -1.696, -1.7808, -1.8232, -1.7384, -1.8232, -1.7384, -1.7808, -1.8656, -1.8232, -1.908, -1.8232, -1.908, -1.8656, -1.908, -1.8656, -1.9504, -1.8656, -1.9504, -1.908, -1.9504, -1.908, -1.9928, -1.908, -1.9928, -1.908, -2.0352, -1.9504, -2.0352, -1.9504, -2.0352, -2.0352, -1.9504, -1.9928, -2.0776, -1.9928, -2.0776, -2.0352, -2.12, -2.0352, -2.12, -2.0352, -2.12, -2.0352, -2.1624, -2.0776, -2.1624, -2.0776, -2.1624, -2.12, -2.2048, -2.12, -2.2048, -2.12, -2.2048, -2.12, -2.2472, -2.2472, -2.1624, -2.1624, -2.2472, -2.2048, -2.2896, -2.2048, -2.2896, -2.2048, -2.2896, -2.2472, -2.332, -2.2472, -2.332, -2.332, -2.2472, -2.2896, -2.3744, -2.2896, -2.3744, -2.2896, -2.3744, -2.332, -2.4168, -2.4168, -2.332, -2.332, -2.4168, -2.3744, -2.4592, -2.4592, -2.3744, -2.4592, -2.3744, -2.4168, -2.5016, -2.5016, -2.4168, -2.5016, -2.4168, -2.5016, -2.4168, -2.5016, -2.3744, -2.4592, -2.3744, -2.4592, -2.3744, -2.4168, -2.332, -2.332, -2.4168, -2.4168, -2.332, -2.3744, -2.2896, -2.3744, -2.2896, -2.2896, -2.3744, -2.332, -2.2472, -2.2472, -2.332, -2.332, -2.2472, -2.2472, -2.2896, -2.2896, -2.2048, -2.2048, -2.2896, -2.2896, -2.1624, -2.2472, -2.1624, -2.2472, -2.1624, -2.2048, -2.12, -2.2048, -2.12, -2.12, -2.2048, -2.1624, -2.0776, -2.0776, -2.1624, -2.0776, -2.1624, -2.12, -2.0352, -2.0352, -2.12, -2.12, -2.0352, -2.0776, -1.9928, -2.0776, -1.9928, -2.0776, -1.9928, -2.0352, -1.9504, -1.9504, -2.0352, -1.9504, -2.0352, -1.908, -1.9928, -1.908, -1.9928, -1.908, -1.9928, -1.9504, -1.8656, -1.8656, -1.9504, -1.908, -1.8656, -1.908, -1.8232, -1.8232, -1.908, -1.8656, -1.8232, -1.8232, -1.7808, -1.8232, -1.7384, -1.8232, -1.7384, -1.7808, -1.696, -1.7808, -1.696, -1.7808, -1.696, -1.7384, -1.6536, -1.7384, -1.6536, -1.7384, -1.6536, -1.696, -1.6112, -1.696, -1.6112, -1.6112, -1.696, -1.6536, -1.5688, -1.6536, -1.5688, -1.6536, -1.5688, -1.5688, -1.6112, -1.6112, -1.5264, -1.5264, -1.6112, -1.5688, -1.484, -1.5688, -1.484, -1.5264, -1.484, -1.5264, -1.4416, -1.5264, -1.4416, -1.5264, -1.3992, -1.484, -1.3992, -1.3992, -1.484, -1.4416, -1.3992, -1.4416, -1.3568, -1.4416, -1.3568, -1.4416, -1.3144, -1.3992, -1.3144, -1.3992, -1.3144, -1.3144, -1.3568, -1.3568, -1.272, -1.272, -1.3568, -1.3144, -1.2296, -1.3144, -1.2296, -1.3144, -1.2296, -1.272, -1.1872, -1.1872, -1.272, -1.1872, -1.272, -1.2296, -1.1448, -1.2296, -1.1448, -1.2296, -1.1448, -1.1872, -1.1024, -1.1024, -1.1872, -1.1872, -1.1024, -1.1448, -1.06, -1.1448, -1.06, -1.06, -1.1448, -1.1024, -1.0176, -1.0176, -1.1024, -1.0176, -1.1024, -1.06, -0.9752, -0.9752, -1.06, -1.06, -0.9752, -1.0176, -0.9328, -0.9328, -1.0176, -0.9328, -1.0176, -0.9752, -0.8904, -0.9752, -0.8904, -0.8904, -0.9752, -0.9328, -0.848, -0.848, -0.9328, -0.848, -0.9328, -0.8904, -0.8056, -0.8056, -0.8904, -0.8056, -0.848, -0.848, -0.7632, -0.7632, -0.848, -0.848, -0.7208, -0.8056, -0.7208, -0.7208, -0.8056, -0.7208, -0.7632, -0.6784, -0.7632, -0.6784, -0.7632, -0.7208, -0.636, -0.6784, -0.636, -0.5936, -0.7208, -0.6784, -0.5512, -0.5512, -0.636, -0.636, -0.5512, -0.5936, -0.5512, -0.5936, -0.5088, -0.5936, -0.5088, -0.5512, -0.5088, -0.5512, -0.4664, -0.5512, -0.4664, -0.5088, -0.424, -0.5088, -0.424, -0.5088, -0.424, -0.4664, -0.424, -0.4664, -0.3816, -0.3816, -0.4664, -0.424, -0.3392, -0.3392, -0.424, -0.424, -0.3392, -0.3816, -0.2968, -0.3816, -0.2968, -0.3816, -0.2968, -0.3392, -0.2544, -0.2544, -0.3392, -0.3392, -0.2544, -0.2968, -0.212, -0.2968, -0.212, -0.212, -0.2968, -0.2544, -0.1696, -0.2544, -0.1696, -0.1696, -0.2544, -0.212, -0.1272, -0.212, -0.1272, -0.1272, -0.212, -0.1696, -0.0848, -0.0848, -0.1696, -0.0848, -0.1272, -0.1272, -0.0424, -0.1272, -0.0424, -0.1272, -0.0424, -0.0848, 0.0, 0.0, -0.0848, -0.0424, 0.0, -0.0424, 0.0424, 0.0424, -0.0424, 0.0424, 0.0, 0.0, 0.0848, 0.0848, 0.0, 0.0424, 0.0848, 0.0424, 0.1272, 0.1272, 0.0424, 0.1272, 0.0848, 0.0848, 0.1696, 0.0848, 0.1696, 0.1272, 0.212, 0.1272, 0.212, 0.1272, 0.212, 0.1696, 0.212, 0.1696, 0.2544, 0.1696, 0.2544, 0.212, 0.2968, 0.212, 0.2968, 0.2968, 0.212, 0.2544, 0.3392, 0.2544, 0.3392, 0.3392, 0.2544, 0.3392, 0.2968, 0.2968, 0.3816, 0.3816, 0.2968, 0.3392, 0.424, 0.3392, 0.424, 0.424, 0.3392, 0.4664, 0.3816, 0.4664, 0.3816, 0.4664, 0.3816, 0.424, 0.5088, 0.424, 0.5088, 0.4664, 0.5088, 0.4664, 0.5512, 0.5088, 0.5512, 0.5088, 0.5512, 0.5512, 0.5936, 0.5512, 0.636, 0.636, 0.5512, 0.5936, 0.636, 0.5936, 0.6784, 0.6784, 0.5936, 0.636, 0.6784, 0.636, 0.7208, 0.636, 0.7208, 0.6784, 0.7208, 0.6784, 0.7632, 0.7208, 0.7632, 0.7208, 0.8056, 0.7208, 0.8056, 0.7208, 0.8056, 0.7632, 0.848, 0.848, 0.7632, 0.7632, 0.848, 0.8056, 0.8904, 0.8056, 0.8904, 0.8904, 0.8056, 0.848, 0.9328, 0.9328, 0.848, 0.9328, 0.848, 0.8904, 0.9752, 0.9752, 0.8904, 0.9328, 0.9752, 0.9328, 1.0176, 1.0176, 0.9328, 0.9752, 1.06, 0.9752, 1.06, 0.9752, 1.06, 1.0176, 1.1024, 1.1024, 1.0176, 1.0176, 1.1024, 1.06, 1.1448, 1.06, 1.1448, 1.06, 1.1448, 1.1024, 1.1872, 1.1024, 1.1872, 1.1872, 1.1024, 1.1448, 1.2296, 1.1448, 1.2296, 1.1448, 1.2296, 1.1872, 1.272, 1.272, 1.1872, 1.272, 1.1872, 1.2296, 1.3144, 1.2296, 1.3144, 1.3144, 1.2296, 1.272, 1.3568, 1.272, 1.3568, 1.3144, 1.3568, 1.3144, 1.3992, 1.3992, 1.3144, 1.3568, 1.3992, 1.3568, 1.4416, 1.3568, 1.4416, 1.4416, 1.3568, 1.3992, 1.484, 1.484, 1.3992, 1.484, 1.3992, 1.4416, 1.5264, 1.5264, 1.4416, 1.4416, 1.5688, 1.484, 1.5688, 1.5688, 1.484, 1.5688, 1.484, 1.5264, 1.6112, 1.5264, 1.6112, 1.6112, 1.5688, 1.6536, 1.5688, 1.5688, 1.6536, 1.6112, 1.696, 1.696, 1.6112, 1.696, 1.6112, 1.6536, 1.7384, 1.6536, 1.7384, 1.7384, 1.6536, 1.696, 1.7808, 1.7384, 1.8232, 1.7384, 1.8232, 1.7384, 1.8232, 1.7808, 1.8656, 1.7808, 1.8656, 1.8232, 1.908, 1.8232, 1.908, 1.8232, 1.908, 1.8656, 1.9504, 1.8656, 1.9504, 1.8656, 1.9504, 1.908, 1.9928, 1.908, 1.9928, 1.908, 1.9928, 1.9504, 2.0352, 1.9504, 2.0352, 1.9504, 2.0352, 1.9928, 2.0776, 1.9928, 2.0776, 1.9928, 2.0776, 2.0352, 2.12, 2.0352, 2.12, 2.0352, 2.12, 2.0776, 2.1624, 2.0776, 2.1624, 2.0776, 2.2048, 2.12, 2.2048, 2.12, 2.2048, 2.12, 2.2048, 2.1624, 2.2472, 2.2472, 2.1624, 2.1624, 2.2472, 2.2048, 2.2896, 2.2048, 2.2896, 2.2048, 2.332, 2.332, 2.2472, 2.332, 2.2472, 2.2472, 2.3744, 2.2896, 2.3744, 2.2896, 2.3744, 2.2896, 2.4168, 2.332, 2.4168, 2.4168, 2.332, 2.332, 2.4168, 2.3744, 2.4592, 2.3744, 2.4592, 2.4168, 2.5016, 2.5016, 2.4168, 2.5016, 2.4168, 2.4168, 2.544, 2.544, 2.4592, 2.544, 2.4168, 2.4168, 2.5016, 2.5016, 2.4168, 2.5016, 2.3744, 2.4592, 2.3744, 2.4592, 2.3744, 2.4592, 2.332, 2.4168, 2.332, 2.332, 2.4168, 2.4168, 2.2896, 2.2896, 2.3744, 2.3744, 2.2896, 2.332, 2.2472, 2.332, 2.2472, 2.332, 2.2472, 2.332, 2.2048, 2.2896, 2.2048, 2.2896, 2.2048, 2.2896, 2.1624, 2.2472, 2.1624, 2.1624, 2.2472, 2.2048, 2.12, 2.2048, 2.12, 2.12, 2.2048, 2.2048, 2.12, 2.0776, 2.1624, 2.0776, 2.1624, 2.12, 2.0352, 2.12, 2.0352, 2.12, 2.0352, 2.12, 1.9928, 2.0776, 1.9928, 1.9928, 2.0776, 2.0352, 1.9504, 2.0352, 1.9504, 2.0352, 1.9504, 1.9928, 1.908, 1.9928, 1.908, 1.908, 1.9928, 1.9928, 1.8656, 1.8656, 1.9504, 1.9504, 1.8656, 1.908, 1.8232, 1.8232, 1.908, 1.8232, 1.908, 1.8656, 1.7808, 1.7808, 1.8656, 1.7808, 1.8656, 1.8232, 1.7384, 1.7384, 1.8232, 1.7384, 1.7808, 1.7808, 1.696, 1.6536, 1.7808, 1.7384, 1.6536, 1.696, 1.6536, 1.696, 1.6112, 1.696, 1.5688, 1.6536, 1.5688, 1.6536, 1.5688, 1.6536, 1.5688, 1.6112, 1.5688, 1.6112, 1.5264, 1.6112, 1.5264, 1.5688, 1.484, 1.5688, 1.484, 1.5688, 1.484, 1.5264, 1.4416, 1.5264, 1.4416, 1.4416, 1.5264, 1.484, 1.3992, 1.484, 1.3992, 1.484, 1.3568, 1.4416, 1.3568, 1.3568, 1.4416, 1.3568, 1.4416, 1.3992, 1.3144, 1.3144, 1.3992, 1.3992, 1.3144, 1.3568, 1.272, 1.3568, 1.272, 1.272, 1.3568, 1.3144, 1.2296, 1.2296, 1.3144, 1.2296, 1.3144, 1.272, 1.1872, 1.272, 1.1872, 1.1872, 1.2296, 1.2296, 1.1448, 1.1448, 1.2296, 1.1448, 1.2296, 1.1872, 1.1024, 1.1872, 1.1024, 1.1448, 1.06, 1.1448, 1.06, 1.06, 1.1448, 1.1024, 1.0176, 1.0176, 1.1024, 1.0176, 1.1024, 1.06, 0.9752, 1.06, 0.9752, 0.9752, 1.06, 1.0176, 0.9328, 0.9328, 1.0176, 1.0176, 0.9328, 0.9328, 0.9752, 0.9752, 0.8904, 0.8904, 0.9752, 0.9328, 0.848, 0.9328, 0.848, 0.848, 0.9328, 0.8904, 0.8056, 0.8056, 0.8904, 0.8056, 0.8904, 0.848, 0.7632, 0.7632, 0.848, 0.7632, 0.848, 0.8056, 0.7208, 0.7208, 0.8056, 0.7208, 0.7632, 0.7632, 0.6784, 0.6784, 0.7632, 0.6784, 0.7632, 0.7208, 0.636, 0.636, 0.7208, 0.636, 0.6784, 0.6784, 0.5936, 0.5936, 0.6784, 0.5936, 0.6784, 0.636, 0.5512, 0.5512, 0.636, 0.5512, 0.5936, 0.5512, 0.5088, 0.5936, 0.4664, 0.5512, 0.4664, 0.5088, 0.424, 0.5088, 0.424, 0.4664, 0.424, 0.4664, 0.3816, 0.4664, 0.3816, 0.4664, 0.3816, 0.424, 0.3392, 0.424, 0.3392, 0.424, 0.3392, 0.3816, 0.2968, 0.3816, 0.2968, 0.2968, 0.3816]


        self.fig = Figure(figsize=(8, 4.5), dpi=100)
        self.ax = self.fig.add_subplot(111)
        Vdiv = 1
        self.ax.set(xlim=(0 - 6, 12 - 6))
        self.ax.set(ylim=(-4 * Vdiv, 4 * Vdiv))
        self.ax.locator_params(axis="x", nbins=12)
        self.ax.locator_params(axis="y", nbins=8)
        self.ax.axes.yaxis.set_ticklabels([])
        self.ax.axes.xaxis.set_ticklabels([])
        self.fig.suptitle("Signal and System \n""", fontweight="bold")
        self.line1, = self.ax.plot(self.t, signal, '-r', color='r', label='channel 1')
        self.line2, = self.ax.plot(self.t, signal2, '-r', color='b', label='channel 2')
        self.line3, = self.ax.plot(self.t, signal3, '-r', color='k', label='channel 3')
        self.ax.legend()
        self.canvas = FigureCanvasTkAgg(self.fig, master=self.left_frame)  # A tk.DrawingArea.
        self.canvas.draw()
        self.toolbar = NavigationToolbar2Tk(self.canvas, self.left_frame)
        self.toolbar.update()

        self.canvas.mpl_connect(
            "key_press_event", lambda event: print(f"you pressed {event.key}"))
        self.canvas.mpl_connect("key_press_event", key_press_handler)
        self.toolbar.pack(side=tkinter.BOTTOM, fill=tkinter.X)
        self.canvas.get_tk_widget().pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)

        self.channel_frame = tkinter.Frame(self.left_frame)
        self.channel_frame.pack(side=tkinter.LEFT, fill=tkinter.BOTH, expand=1)

        self.chv1 = tkinter.IntVar()
        self.chv2 = tkinter.IntVar()
        self.chv3 = tkinter.IntVar()
        self.chv4 = tkinter.IntVar()
        self.ch1 = tkinter.Checkbutton(self.channel_frame, text='ch1', variable=self.chv1, command=self._graph_update)
        self.ch2 = tkinter.Checkbutton(self.channel_frame, text='ch2', variable=self.chv2, command=self._graph_update)
        self.ch3 = tkinter.Checkbutton(self.channel_frame, text='ch3', variable=self.chv3, command=self._graph_update)
        self.ch4 = tkinter.Checkbutton(self.channel_frame, text='ch4', variable=self.chv4, command=self._graph_update)
        self.ch1.pack(side=tkinter.LEFT, expand=1)
        self.ch2.pack(side=tkinter.LEFT, expand=1)
        self.ch3.pack(side=tkinter.LEFT, expand=1)
        self.ch4.pack(side=tkinter.LEFT, expand=1)

        self.plotdot_frame = tkinter.Frame(self)
        self.plotdot_frame.pack(side=tkinter.TOP, fill=tkinter.BOTH, expand=1)

        self.ui_item = [self.voltdiv, self.timediv, self.x_offset, self.y_offset, self.sampling_offset,
                         self.ch1, self.ch2, self.ch3, self.ch4,
                        self.run_button, self.stop_button]

    def run(self):
        try:
            self.scope.run()
        except Exception as E:
            print(E)

    def stop(self):
        try:
            self.scope.stop()
        except Exception as E:
            print(E)

    def on_key_event(event):
        key_press_handler(event, canvas, toolbar)



    def _connect(self):

        self.ip = self.ip_box.get()
        self.scope = DS1054Z(self.ip)
        print("Connected to: ", self.scope.idn)
        self.report['text'] = self.scope.idn
        self.status['text'] = "Login Successful"


    def _offset_x_change(self, event=0):
        block_number = 6
        offset = 0.01 * self.x_offset.get() * block_number * self.time_div_range[self.timediv.current()]
        self.scope.timebase_offset = 0
        self.scope.timebase_offset = offset
        self._save_chinfo(self.select_ch.current(), 1, self.x_offset.get())
        # print(block_number, '-', self.x_offset.get(), '-', self.time_div_range[self.timediv.current()], '-', offset)

    def _offset_y_change(self, event=0):
        self.block_number = 6
        offset = 0.01 * self.y_offset.get() * self.block_number * self.volt_div_range[self.voltdiv.current()]
        self.scope.set_channel_offset(self.select_ch.get(), offset)
        self.offsety = self.y_offset.get()
        self._save_chinfo(self.select_ch.current(), 2, self.y_offset.get())

        # print(block_number, '-', self.offsety, '-', self.volt_div_range[self.voltdiv.current()], '-', offset)


    #save voltdiv, offset_x, offset_y value to ch_info list
    def _save_chinfo(self, ch, index, value):
        if ch==0:
            self.ch1_info[index] = value
        elif ch==1:
            self.ch2_info[index] = value
        elif ch==2:
            self.ch3_info[index] = value
        elif ch==3:
            self.ch4_info[index] = value

    def _graph_update(self, color=['r', 'b', 'y', 'g']):
        self.ax.cla()
        self.canvas.flush_events()
        ratio = self.sampling_offset.get()
        if self.chv1.get():
            self._channel_plot(1, clr=color[0], ratio=ratio)
        if self.chv2.get():
            self._channel_plot(2, clr=color[1], ratio=ratio)
        if self.chv3.get():
            self._channel_plot(3, clr=color[2], ratio=ratio)
        if self.chv4.get():
            self._channel_plot(4, clr=color[3], ratio=ratio)
        self.ax.legend()
        self.canvas.draw()
        self.after(3500, self._graph_update)
    def _channel_plot(self, num, clr, ratio):
        chan = 'CHAN' + str(num)
        data = self.scope.get_waveform_samples(chan)
        data = data[::ratio]
        chan = 'CHAN' + str((num))
        offset = 0.01 * self.scope.get_channel_offset(chan) * self.block_number * self.volt_div_range[self.voltdiv.current()]
        data = list(np.asarray(data) + offset)
        print(offset)
        self.t = np.arange(0, 1200, ratio)
        self.ax.locator_params(axis="x", nbins=12)
        self.ax.locator_params(axis="y", nbins=8)
        # self.ax.axes.yaxis.set_ticklabels([])
        self.ax.axes.xaxis.set_ticklabels([])
        self.ax.plot(self.t, data, '-r', color=clr, label=('Channel',str(num)))
    def _setvoltdiv(self, event=0):
        try:
            self.scope.set_channel_scale(self.select_ch.get(), self.volt_div_range[self.voltdiv.current()])
            self._save_chinfo(self.select_ch.current(), 0, self.voltdiv.current())
        except Exception as e:print(e)

    def _settimediv(self, event=0):
        try:
            self.scope.timebase_scale = self.time_div_range[self.timediv.current()]
        except Exception as e: print(e)

    def _select_channel(self, event=0):
        #get channel info and change combo box first

        if self.select_ch.get() == 'CHAN1':
            listy = self.ch1_info
        elif self.select_ch.get() == 'CHAN2':
            listy = self.ch2_info
        elif self.select_ch.get() == 'CHAN3':
            listy = self.ch3_info
        elif self.select_ch.get() == 'CHAN4':
            listy = self.ch4_info
            print(self.select_ch.get())
        else:
            listy = [0, 0, 0]
        print(self.select_ch.get())
        print(listy)
        self.voltdiv.current(listy[0])
        self.y_offset.set(listy[1])
        self.x_offset.set(listy[2])


root = Application()
root.mainloop()
